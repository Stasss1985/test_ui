{"uid":"fb25f75648bdc8cd","name":"test_create_old_lead_silver_cash_contract","fullName":"tests.test_add_lead_contract#test_create_old_lead_silver_cash_contract","historyId":"d6d1b12237757341d4149a66e801a293","time":{"start":1747310315754,"stop":1747310315754,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome=136.0.7103.93)\nStacktrace:\n\tGetHandleVerifier [0x0128FC83+61635]\n\tGetHandleVerifier [0x0128FCC4+61700]\n\t(No symbol) [0x010B05D3]\n\t(No symbol) [0x010ADBE0]\n\t(No symbol) [0x010A13A8]\n\t(No symbol) [0x010A2CF0]\n\t(No symbol) [0x010A1638]\n\t(No symbol) [0x010A1193]\n\t(No symbol) [0x010A0EA1]\n\t(No symbol) [0x0109EE80]\n\t(No symbol) [0x0109F81B]\n\t(No symbol) [0x010B3FFE]\n\t(No symbol) [0x0113F217]\n\t(No symbol) [0x0111D29C]\n\t(No symbol) [0x0113E61B]\n\t(No symbol) [0x0111D096]\n\t(No symbol) [0x010EC840]\n\t(No symbol) [0x010ED6A4]\n\tGetHandleVerifier [0x015145A3+2701795]\n\tGetHandleVerifier [0x0150FD26+2683238]\n\tGetHandleVerifier [0x0152AA6E+2793134]\n\tGetHandleVerifier [0x012A6945+155013]\n\tGetHandleVerifier [0x012AD02D+181357]\n\tGetHandleVerifier [0x012974D8+92440]\n\tGetHandleVerifier [0x01297680+92864]\n\tGetHandleVerifier [0x01282070+5296]\n\tBaseThreadInitThunk [0x767B5D49+25]\n\tRtlInitializeExceptionChain [0x777BD03B+107]\n\tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]","statusTrace":"login_page = <pages.login_page.admin_login.AdminLogin object at 0x000001CE1954CE10>\n\n    @pytest.fixture(scope=\"function\")\n    def open_crm_as_admin(login_page):\n>       login_page.open_page()\n\nconftest.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\base_page.py:32: in open_page\n    self.driver.get(f'{self.base_url}{self.page_url}')\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001CE191D2510>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777BD03B+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome=136.0.7103.93)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0128FC83+61635]\nE       \tGetHandleVerifier [0x0128FCC4+61700]\nE       \t(No symbol) [0x010B05D3]\nE       \t(No symbol) [0x010ADBE0]\nE       \t(No symbol) [0x010A13A8]\nE       \t(No symbol) [0x010A2CF0]\nE       \t(No symbol) [0x010A1638]\nE       \t(No symbol) [0x010A1193]\nE       \t(No symbol) [0x010A0EA1]\nE       \t(No symbol) [0x0109EE80]\nE       \t(No symbol) [0x0109F81B]\nE       \t(No symbol) [0x010B3FFE]\nE       \t(No symbol) [0x0113F217]\nE       \t(No symbol) [0x0111D29C]\nE       \t(No symbol) [0x0113E61B]\nE       \t(No symbol) [0x0111D096]\nE       \t(No symbol) [0x010EC840]\nE       \t(No symbol) [0x010ED6A4]\nE       \tGetHandleVerifier [0x015145A3+2701795]\nE       \tGetHandleVerifier [0x0150FD26+2683238]\nE       \tGetHandleVerifier [0x0152AA6E+2793134]\nE       \tGetHandleVerifier [0x012A6945+155013]\nE       \tGetHandleVerifier [0x012AD02D+181357]\nE       \tGetHandleVerifier [0x012974D8+92440]\nE       \tGetHandleVerifier [0x01297680+92864]\nE       \tGetHandleVerifier [0x01282070+5296]\nE       \tBaseThreadInitThunk [0x767B5D49+25]\nE       \tRtlInitializeExceptionChain [0x777BD03B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]\n\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747310044962,"stop":1747310044964,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"play_sound_after_tests","time":{"start":1747310044964,"stop":1747310044964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1747310315756,"stop":1747310327191,"duration":11435},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_page","time":{"start":1747310327191,"stop":1747310327298,"duration":107},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"open_crm_as_admin","time":{"start":1747310327298,"stop":1747310348531,"duration":21233},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome=136.0.7103.93)\nStacktrace:\n\tGetHandleVerifier [0x0128FC83+61635]\n\tGetHandleVerifier [0x0128FCC4+61700]\n\t(No symbol) [0x010B05D3]\n\t(No symbol) [0x010ADBE0]\n\t(No symbol) [0x010A13A8]\n\t(No symbol) [0x010A2CF0]\n\t(No symbol) [0x010A1638]\n\t(No symbol) [0x010A1193]\n\t(No symbol) [0x010A0EA1]\n\t(No symbol) [0x0109EE80]\n\t(No symbol) [0x0109F81B]\n\t(No symbol) [0x010B3FFE]\n\t(No symbol) [0x0113F217]\n\t(No symbol) [0x0111D29C]\n\t(No symbol) [0x0113E61B]\n\t(No symbol) [0x0111D096]\n\t(No symbol) [0x010EC840]\n\t(No symbol) [0x010ED6A4]\n\tGetHandleVerifier [0x015145A3+2701795]\n\tGetHandleVerifier [0x0150FD26+2683238]\n\tGetHandleVerifier [0x0152AA6E+2793134]\n\tGetHandleVerifier [0x012A6945+155013]\n\tGetHandleVerifier [0x012AD02D+181357]\n\tGetHandleVerifier [0x012974D8+92440]\n\tGetHandleVerifier [0x01297680+92864]\n\tGetHandleVerifier [0x01282070+5296]\n\tBaseThreadInitThunk [0x767B5D49+25]\n\tRtlInitializeExceptionChain [0x777BD03B+107]\n\tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]\n\n","statusTrace":"  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Stass\\karman_test\\conftest.py\", line 89, in open_crm_as_admin\n    login_page.open_page()\n  File \"C:\\Users\\Stass\\karman_test\\pages\\base_page.py\", line 32, in open_page\n    self.driver.get(f'{self.base_url}{self.page_url}')\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"lead_page","time":{"start":1747310374951,"stop":1747310374960,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"product_page","time":{"start":1747310374960,"stop":1747310374967,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"contract_create_page","time":{"start":1747310374967,"stop":1747310374970,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome=136.0.7103.93)\nStacktrace:\n\tGetHandleVerifier [0x0128FC83+61635]\n\tGetHandleVerifier [0x0128FCC4+61700]\n\t(No symbol) [0x010B05D3]\n\t(No symbol) [0x010ADBE0]\n\t(No symbol) [0x010A13A8]\n\t(No symbol) [0x010A2CF0]\n\t(No symbol) [0x010A1638]\n\t(No symbol) [0x010A1193]\n\t(No symbol) [0x010A0EA1]\n\t(No symbol) [0x0109EE80]\n\t(No symbol) [0x0109F81B]\n\t(No symbol) [0x010B3FFE]\n\t(No symbol) [0x0113F217]\n\t(No symbol) [0x0111D29C]\n\t(No symbol) [0x0113E61B]\n\t(No symbol) [0x0111D096]\n\t(No symbol) [0x010EC840]\n\t(No symbol) [0x010ED6A4]\n\tGetHandleVerifier [0x015145A3+2701795]\n\tGetHandleVerifier [0x0150FD26+2683238]\n\tGetHandleVerifier [0x0152AA6E+2793134]\n\tGetHandleVerifier [0x012A6945+155013]\n\tGetHandleVerifier [0x012AD02D+181357]\n\tGetHandleVerifier [0x012974D8+92440]\n\tGetHandleVerifier [0x01297680+92864]\n\tGetHandleVerifier [0x01282070+5296]\n\tBaseThreadInitThunk [0x767B5D49+25]\n\tRtlInitializeExceptionChain [0x777BD03B+107]\n\tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]","statusTrace":"login_page = <pages.login_page.admin_login.AdminLogin object at 0x000001CE1954CE10>\n\n    @pytest.fixture(scope=\"function\")\n    def open_crm_as_admin(login_page):\n>       login_page.open_page()\n\nconftest.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\base_page.py:32: in open_page\n    self.driver.get(f'{self.base_url}{self.page_url}')\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001CE191D2510>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777BD03B+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome=136.0.7103.93)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0128FC83+61635]\nE       \tGetHandleVerifier [0x0128FCC4+61700]\nE       \t(No symbol) [0x010B05D3]\nE       \t(No symbol) [0x010ADBE0]\nE       \t(No symbol) [0x010A13A8]\nE       \t(No symbol) [0x010A2CF0]\nE       \t(No symbol) [0x010A1638]\nE       \t(No symbol) [0x010A1193]\nE       \t(No symbol) [0x010A0EA1]\nE       \t(No symbol) [0x0109EE80]\nE       \t(No symbol) [0x0109F81B]\nE       \t(No symbol) [0x010B3FFE]\nE       \t(No symbol) [0x0113F217]\nE       \t(No symbol) [0x0111D29C]\nE       \t(No symbol) [0x0113E61B]\nE       \t(No symbol) [0x0111D096]\nE       \t(No symbol) [0x010EC840]\nE       \t(No symbol) [0x010ED6A4]\nE       \tGetHandleVerifier [0x015145A3+2701795]\nE       \tGetHandleVerifier [0x0150FD26+2683238]\nE       \tGetHandleVerifier [0x0152AA6E+2793134]\nE       \tGetHandleVerifier [0x012A6945+155013]\nE       \tGetHandleVerifier [0x012AD02D+181357]\nE       \tGetHandleVerifier [0x012974D8+92440]\nE       \tGetHandleVerifier [0x01297680+92864]\nE       \tGetHandleVerifier [0x01282070+5296]\nE       \tBaseThreadInitThunk [0x767B5D49+25]\nE       \tRtlInitializeExceptionChain [0x777BD03B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x777BCFC1+561]\n\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException","steps":[],"attachments":[{"uid":"375041a3ca9fe375","name":"log","source":"375041a3ca9fe375.txt","type":"text/plain","size":392}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"driver::0","time":{"start":1747310349086,"stop":1747310351857,"duration":2771},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"play_sound_after_tests::0","time":{"start":1747311812853,"stop":1747311815362,"duration":2509},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"tag","value":"smoke('smoke test')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_add_lead_contract"},{"name":"host","value":"LAPTOP-R624DMFA"},{"name":"thread","value":"13660-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_add_lead_contract"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke('smoke test')"]},"source":"fb25f75648bdc8cd.json","parameterValues":[]}