{"uid":"5296534c0c243cec","name":"test_create_old_lead_laptop_cash_contract","fullName":"tests.test_add_lead_contract#test_create_old_lead_laptop_cash_contract","historyId":"1ab533361232fa234c58c836827a14eb","time":{"start":1747295660476,"stop":1747295773498,"duration":113022},"status":"failed","statusMessage":"AssertionError: Текст не совпадает. Ожидаемый: Завершено, Фактический: Распечатка чека","statusTrace":"open_crm_as_admin = None, lead_page = <pages.lead_page.lead_page.LeadPage object at 0x00000204BC7B97D0>\nproduct_page = <pages.lead_page.product_page.ProductPage object at 0x00000204BC7BB390>\ncontract_create_page = <pages.lead_page.contract_сreate_page.ContractCreatePage object at 0x00000204BC7BBA90>\n\n    @pytest.mark.smoke('smoke test')\n    def test_create_old_lead_laptop_cash_contract(open_crm_as_admin, lead_page, product_page, contract_create_page):\n        # Смена офиса\n        lead_page.change_office_1_maya()\n        lead_page.take_screenshot()\n        # Переход к созданию лида\n        lead_page.navigate_to_lead_create()\n        lead_page.take_screenshot()\n        # Выбор клиента из базы\n        lead_page.chose_old_client_to_lead()\n        lead_page.take_screenshot()\n        # Добавление продукта\n        product_page.add_product_laptop()\n        product_page.take_screenshot()\n        # Выбор тарифа\n        contract_create_page.contract_tariff_chose_2()\n        contract_create_page.take_screenshot()\n        # Создание договора\n        contract_create_page.create_operation_create_contract()\n        contract_create_page.take_screenshot()\n        # Печать документа\n        contract_create_page.print_document()\n        contract_create_page.take_screenshot()\n        # Печать чека создания \"догов потребит займа\"\n        contract_create_page.print_check()\n        contract_create_page.take_screenshot()\n        # Проверка статуса создания сделки (печати чека)\n>       contract_create_page.compare_text_status()\n\ntests\\test_add_lead_contract.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\lead_page\\contract_сreate_page.py:134: in compare_text_status\n    self.compare_text(self.loc.STATUS_PRINT_DOC_CHECK, \"Завершено\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.lead_page.contract_сreate_page.ContractCreatePage object at 0x00000204BC7BBA90>\nlocator = ('css selector', 'div.content-page li:nth-child(3) div.w-100 div'), expected_text = 'Завершено'\n\n    @allure.step(\"Сравнение текста элемента с ожидаемым текстом\")\n    def compare_text(self, locator, expected_text):\n        # Ожидание появления элемента и получение его текста\n        actual_text = WebDriverWait(self.driver, 30).until(\n            EC.visibility_of_element_located(locator)\n        ).text\n    \n>       assert actual_text == expected_text, f\"Текст не совпадает. Ожидаемый: {expected_text}, Фактический: {actual_text}\"\nE       AssertionError: Текст не совпадает. Ожидаемый: Завершено, Фактический: Распечатка чека\n\npages\\base_page.py:170: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747295173279,"stop":1747295173279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"play_sound_after_tests","time":{"start":1747295173279,"stop":1747295173279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1747295627215,"stop":1747295646593,"duration":19378},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_page","time":{"start":1747295646593,"stop":1747295646671,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"open_crm_as_admin","time":{"start":1747295646671,"stop":1747295660445,"duration":13774},"status":"passed","steps":[{"name":"enter correct login and password","time":{"start":1747295652389,"stop":1747295659953,"duration":7564},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Check correct url","time":{"start":1747295659954,"stop":1747295659964,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[{"uid":"2ce584150720d5de","name":"screenshot","source":"2ce584150720d5de.png","type":"image/png","size":191092}],"parameters":[],"stepsCount":2,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"lead_page","time":{"start":1747295660446,"stop":1747295660451,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"product_page","time":{"start":1747295660452,"stop":1747295660472,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"contract_create_page","time":{"start":1747295660472,"stop":1747295660476,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Текст не совпадает. Ожидаемый: Завершено, Фактический: Распечатка чека","statusTrace":"open_crm_as_admin = None, lead_page = <pages.lead_page.lead_page.LeadPage object at 0x00000204BC7B97D0>\nproduct_page = <pages.lead_page.product_page.ProductPage object at 0x00000204BC7BB390>\ncontract_create_page = <pages.lead_page.contract_сreate_page.ContractCreatePage object at 0x00000204BC7BBA90>\n\n    @pytest.mark.smoke('smoke test')\n    def test_create_old_lead_laptop_cash_contract(open_crm_as_admin, lead_page, product_page, contract_create_page):\n        # Смена офиса\n        lead_page.change_office_1_maya()\n        lead_page.take_screenshot()\n        # Переход к созданию лида\n        lead_page.navigate_to_lead_create()\n        lead_page.take_screenshot()\n        # Выбор клиента из базы\n        lead_page.chose_old_client_to_lead()\n        lead_page.take_screenshot()\n        # Добавление продукта\n        product_page.add_product_laptop()\n        product_page.take_screenshot()\n        # Выбор тарифа\n        contract_create_page.contract_tariff_chose_2()\n        contract_create_page.take_screenshot()\n        # Создание договора\n        contract_create_page.create_operation_create_contract()\n        contract_create_page.take_screenshot()\n        # Печать документа\n        contract_create_page.print_document()\n        contract_create_page.take_screenshot()\n        # Печать чека создания \"догов потребит займа\"\n        contract_create_page.print_check()\n        contract_create_page.take_screenshot()\n        # Проверка статуса создания сделки (печати чека)\n>       contract_create_page.compare_text_status()\n\ntests\\test_add_lead_contract.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\lead_page\\contract_сreate_page.py:134: in compare_text_status\n    self.compare_text(self.loc.STATUS_PRINT_DOC_CHECK, \"Завершено\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.lead_page.contract_сreate_page.ContractCreatePage object at 0x00000204BC7BBA90>\nlocator = ('css selector', 'div.content-page li:nth-child(3) div.w-100 div'), expected_text = 'Завершено'\n\n    @allure.step(\"Сравнение текста элемента с ожидаемым текстом\")\n    def compare_text(self, locator, expected_text):\n        # Ожидание появления элемента и получение его текста\n        actual_text = WebDriverWait(self.driver, 30).until(\n            EC.visibility_of_element_located(locator)\n        ).text\n    \n>       assert actual_text == expected_text, f\"Текст не совпадает. Ожидаемый: {expected_text}, Фактический: {actual_text}\"\nE       AssertionError: Текст не совпадает. Ожидаемый: Завершено, Фактический: Распечатка чека\n\npages\\base_page.py:170: AssertionError","steps":[{"name":"Сравнение текста элемента с ожидаемым текстом","time":{"start":1747295773382,"stop":1747295773441,"duration":59},"status":"failed","statusMessage":"AssertionError: Текст не совпадает. Ожидаемый: Завершено, Фактический: Распечатка чека\n","statusTrace":"  File \"C:\\Users\\Stass\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Stass\\karman_test\\pages\\base_page.py\", line 170, in compare_text\n    assert actual_text == expected_text, f\"Текст не совпадает. Ожидаемый: {expected_text}, Фактический: {actual_text}\"\n","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div.content-page li:nth-child(3) div.w-100 div')"},{"name":"expected_text","value":"'Завершено'"}],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"69ba95268bc07420","name":"screenshot","source":"69ba95268bc07420.png","type":"image/png","size":190741},{"uid":"58813f8994d44734","name":"screenshot","source":"58813f8994d44734.png","type":"image/png","size":111511},{"uid":"818dc55b786f2c0b","name":"screenshot","source":"818dc55b786f2c0b.png","type":"image/png","size":121456},{"uid":"8bfba8980c85dbab","name":"screenshot","source":"8bfba8980c85dbab.png","type":"image/png","size":146614},{"uid":"ddf008e6f66aa716","name":"screenshot","source":"ddf008e6f66aa716.png","type":"image/png","size":200085},{"uid":"ac487538f25e4485","name":"screenshot","source":"ac487538f25e4485.png","type":"image/png","size":125119},{"uid":"6a867116b2c684f","name":"screenshot","source":"6a867116b2c684f.png","type":"image/png","size":121366},{"uid":"1f8c9adbc6e2e7cc","name":"screenshot","source":"1f8c9adbc6e2e7cc.png","type":"image/png","size":128188},{"uid":"65be1dcc5d35be84","name":"log","source":"65be1dcc5d35be84.txt","type":"text/plain","size":556}],"parameters":[],"stepsCount":1,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":9},"afterStages":[{"name":"driver::0","time":{"start":1747295774058,"stop":1747295777709,"duration":3651},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"play_sound_after_tests::0","time":{"start":1747296718495,"stop":1747296720727,"duration":2232},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"tag","value":"smoke('smoke test')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_add_lead_contract"},{"name":"host","value":"LAPTOP-R624DMFA"},{"name":"thread","value":"13520-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_add_lead_contract"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke('smoke test')"]},"source":"5296534c0c243cec.json","parameterValues":[]}