{"uid":"772f9cc5f219382c","name":"test_create_old_lead_laptop_cash_contract","fullName":"tests.test_add_lead_contract#test_create_old_lead_laptop_cash_contract","historyId":"1ab533361232fa234c58c836827a14eb","time":{"start":1747307677515,"stop":1747307765422,"duration":87907},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"open_crm_as_admin = None, lead_page = <pages.lead_page.lead_page.LeadPage object at 0x000001E7A3D7AD90>\nproduct_page = <pages.lead_page.product_page.ProductPage object at 0x000001E7A3D78A50>\ncontract_create_page = <pages.lead_page.contract_сreate_page.ContractCreatePage object at 0x000001E7A3B33E90>\n\n    @pytest.mark.smoke('smoke test')\n    def test_create_old_lead_laptop_cash_contract(open_crm_as_admin, lead_page, product_page, contract_create_page):\n        # Смена офиса\n        lead_page.change_office_1_maya()\n        lead_page.take_screenshot()\n        # Переход к созданию лида\n        lead_page.navigate_to_lead_create()\n        lead_page.take_screenshot()\n        # Выбор клиента из базы\n>       lead_page.chose_old_client_to_lead()\n\ntests\\test_add_lead_contract.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\lead_page\\lead_page.py:161: in chose_old_client_to_lead\n    checkboxes = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5b3fa117edf3db0834c926b298c5c3f4\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x000001E7A366C7C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747307426467,"stop":1747307426469,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"play_sound_after_tests","time":{"start":1747307426469,"stop":1747307426469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1747307645472,"stop":1747307652622,"duration":7150},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_page","time":{"start":1747307652622,"stop":1747307652702,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"open_crm_as_admin","time":{"start":1747307652702,"stop":1747307677497,"duration":24795},"status":"passed","steps":[{"name":"enter correct login and password","time":{"start":1747307670890,"stop":1747307677020,"duration":6130},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Check correct url","time":{"start":1747307677020,"stop":1747307677028,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[{"uid":"a0efa76c7a146455","name":"screenshot","source":"a0efa76c7a146455.png","type":"image/png","size":198874}],"parameters":[],"stepsCount":2,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"lead_page","time":{"start":1747307677497,"stop":1747307677504,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"product_page","time":{"start":1747307677505,"stop":1747307677511,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"contract_create_page","time":{"start":1747307677511,"stop":1747307677515,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"open_crm_as_admin = None, lead_page = <pages.lead_page.lead_page.LeadPage object at 0x000001E7A3D7AD90>\nproduct_page = <pages.lead_page.product_page.ProductPage object at 0x000001E7A3D78A50>\ncontract_create_page = <pages.lead_page.contract_сreate_page.ContractCreatePage object at 0x000001E7A3B33E90>\n\n    @pytest.mark.smoke('smoke test')\n    def test_create_old_lead_laptop_cash_contract(open_crm_as_admin, lead_page, product_page, contract_create_page):\n        # Смена офиса\n        lead_page.change_office_1_maya()\n        lead_page.take_screenshot()\n        # Переход к созданию лида\n        lead_page.navigate_to_lead_create()\n        lead_page.take_screenshot()\n        # Выбор клиента из базы\n>       lead_page.chose_old_client_to_lead()\n\ntests\\test_add_lead_contract.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\lead_page\\lead_page.py:161: in chose_old_client_to_lead\n    checkboxes = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5b3fa117edf3db0834c926b298c5c3f4\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x000001E7A366C7C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\PycharmProjects\\PycharmProjects\\tests_ui_karman\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"d2032b027504fd25","name":"screenshot","source":"d2032b027504fd25.png","type":"image/png","size":196003},{"uid":"3d2a851fa35775ec","name":"screenshot","source":"3d2a851fa35775ec.png","type":"image/png","size":111551},{"uid":"8e20fb733b36a0b","name":"click_error_('css selector', '[aria-label=\"Проверить\"]')","source":"8e20fb733b36a0b.png","type":"image/png","size":145831},{"uid":"fc89a65524d7ce0d","name":"log","source":"fc89a65524d7ce0d.txt","type":"text/plain","size":676}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":4},"afterStages":[{"name":"driver::0","time":{"start":1747307765477,"stop":1747307770052,"duration":4575},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"play_sound_after_tests::0","time":{"start":1747308615498,"stop":1747308618023,"duration":2525},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"tag","value":"smoke('smoke test')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_add_lead_contract"},{"name":"host","value":"LAPTOP-R624DMFA"},{"name":"thread","value":"7668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_add_lead_contract"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke('smoke test')"]},"source":"772f9cc5f219382c.json","parameterValues":[]}